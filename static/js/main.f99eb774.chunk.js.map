{"version":3,"sources":["index.js"],"names":["TweetButton","props","tweet","quote","text","author","href","className","id","title","Quote","backgroundColor","colorMod","style","QuoteBox","state","handleClick","bind","this","fetchQuote","fetch","then","res","json","data","setState","content","charCodeAt","catch","console","log","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAIA,SAASA,EAAYC,GAEjB,IAAMC,EAAK,gDAA4CD,EAAME,MAAMC,KAAxD,cAAkEH,EAAME,MAAME,OAA9E,oBACX,OACI,uBAAIC,KAAMJ,EAAOK,UAAU,OAAOC,GAAG,cAAcC,MAAM,qBAAoB,uBAAGF,UAAU,0BAIlG,SAASG,EAAMT,GACX,IAAMU,EAAkB,CAACA,gBAAgB,QAAD,OAAUV,EAAMW,SAAhB,qBACxC,OACI,yBAAKL,UAAU,QAAQM,MAAOF,GAC1B,wBAAIH,GAAG,OAAOD,UAAU,SAAxB,IAAkCN,EAAME,MAAMC,KAA9C,KACA,uBAAGI,GAAG,SAASD,UAAU,YAAYN,EAAME,MAAME,S,IAKvDS,E,kDACF,WAAYb,GAAQ,IAAD,8BACf,cAAMA,IACDc,MAAQ,CACTZ,MAAO,GACPS,SAAU,GAGd,EAAKI,YAAc,EAAKA,YAAYC,KAAjB,gBAPJ,E,gEAYfC,KAAKC,e,oCAILD,KAAKC,e,mCAGK,IAAD,OACTC,MAAM,kCACLC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACH,EAAKC,SAAS,CACVtB,MAAO,CAAC,KAAQqB,EAAKE,QAAS,OAAUF,EAAKnB,QAE7CO,SAAU,IAAM,IAAMY,EAAKnB,OAAOsB,WAAW,GAAK,SAGzDC,MAAMC,QAAQC,O,+BAKf,OAEI,6BAASvB,UAAU,sDACf,yBAAKA,UAAU,YAAYC,GAAG,aAC1B,kBAACE,EAAD,CAAOP,MAAOe,KAAKH,MAAMZ,MAAOS,SAAUM,KAAKH,MAAMH,WACrD,yBAAKL,UAAU,mBACX,kBAACP,EAAD,CAAaG,MAAOe,KAAKH,MAAMZ,QAC/B,4BAAQK,GAAG,YAAYF,KAAK,IAAIyB,QAASb,KAAKF,YAAaT,UAAU,UAArE,oB,GA1CDyB,IAAMC,WAkD7BC,IAASC,OACL,kBAACrB,EAAD,MACAsB,SAASC,eAAe,W","file":"static/js/main.f99eb774.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css';\n\nfunction TweetButton(props) {\n    // Add quote to twitter.com/intent/tweet link\n    const tweet = `http://twitter.com/intent/tweet?text=\"${props.quote.text}\" -${props.quote.author}&hashtags=quotes`\n    return (\n        <a  href={tweet} className=\"icon\" id=\"tweet-quote\" title=\"Tweet this quote!\"><i className=\"fab fa-twitter fa-lg\"></i></a>\n    )\n}\n\nfunction Quote(props) {\n    const backgroundColor = {backgroundColor: `hsla(${props.colorMod}, 50%, 40%, 0.5)`}\n    return (\n        <div className=\"quote\" style={backgroundColor} >\n            <h1 id=\"text\" className=\"title\">\"{props.quote.text}\"</h1>\n            <p id=\"author\" className=\"subtitle\">{props.quote.author}</p>\n        </div>\n    )\n}\n\nclass QuoteBox extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            quote: {},\n            colorMod: 0\n        }\n        \n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    componentDidMount() {\n        // Set a random quote  with when component gets loaded for first time\n        this.fetchQuote();\n    }\n\n    handleClick() {\n        this.fetchQuote();\n    }\n\n    fetchQuote() {\n        fetch('https://api.quotable.io/random')\n        .then((res) => res.json())\n        .then((data) => {          \n            this.setState({\n                quote: {\"text\": data.content, \"author\": data.author},\n                // Set modifier for BG color of Quote, based on first letter of author\n                colorMod: 360 / 27 * (data.author.charCodeAt(0) - 64)\n            })\n        })   \n        .catch(console.log)\n    }\n\n    \n    render() {\n        return (            \n            // <section className=\"wrapper\">\n            <section className=\"column is-three-fifths is-offset-one-fifth wrapper\">\n                <div className=\"container\" id=\"quote-box\">\n                    <Quote quote={this.state.quote} colorMod={this.state.colorMod}  />\n                    <div className=\"level is-mobile\">\n                        <TweetButton quote={this.state.quote} />\n                        <button id=\"new-quote\" href=\"#\" onClick={this.handleClick} className=\"button\">New Quote</button>   \n                    </div>       \n                </div>  \n            </section>\n        )\n    }\n}\n\nReactDOM.render(\n    <QuoteBox />,\n    document.getElementById('root')\n);"],"sourceRoot":""}